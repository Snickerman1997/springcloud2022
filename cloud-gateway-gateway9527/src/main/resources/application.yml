server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:

        - id: payment_routh            #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service   #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**     #断言，路径相匹配的进行路由

        - id: payment_routh2            #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001    #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service   #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/**       #断言，路径相匹配的进行路由
            # 该时间过后该网关路由才能生效，即使上面的Path predicate匹配，但是时间不匹配，依旧不生效，要满足多重的predicate断言
            - After=2022-05-18T16:55:21.921+08:00[Asia/Shanghai]
#            - Cookie=user,chy  #请求要包含Cookie才能生效
#            - Header=X-Request-Id, \d+  #请求头要有X-Request-Id属性并且值为整数的正则表达式
            - Method=GET  #GET请求才能生效
            - Query=username. \d+ #要有参数名username并且值还要是整数才能路由


#        - id: payment_routh3            #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://www.baidu.com   #匹配后提供服务  的路由地址
#          predicates:
#            - Path=/**       #断言，路径相匹配的进行路由
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由

eureka:
  client:
    #表示将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      # 单机版
      defaultZone: http://localhost:7001/eureka